#!/usr/bin/env bash

set -e

cd "$(dirname "$0")/.."

if ! [ -d "./tests/Testing" ]; then
  mkdir ./tests/Testing
fi

# Find all test yaml files in components.
# - `./esphome/components/[target_component]/[test_name].[target_platform].yaml`
# - `./esphome/components/[target_component]/[test_name].*.yaml`
# - `./esphome/components/[target_component]/[test_name].yaml`
for f in ./esphome/components/*/test*.*yaml; do
  IFS='/' read -r -a folder_name <<< "$f"
  target_component="${folder_name[3]}"

  IFS='.' read -r -a file_name <<< "${folder_name[4]}"
  test_name="${file_name[0]}"
  target_platform="${file_name[1]}"
  file_name_parts=${#file_name[@]}

  if [ "$target_platform" = "*" ] || [ $file_name_parts = 2 ]; then
    # Test has *not* defined a specific target platform. Need to run tests for all possible target platforms.
    
    for target_platform_file in ./tests/build_components_base.*.yaml; do
      IFS='/' read -r -a folder_name <<< "$target_platform_file"
      IFS='.' read -r -a file_name <<< "${folder_name[2]}"
      target_platform="${file_name[1]}"

      # create dynamic yaml file in `Testing` folder.
      # `./tests/Testing/[target_component].[test_name].[target_platform].yaml`
      component_test_file="./tests/Testing/$target_component.$test_name.$target_platform.yaml"

      cp $target_platform_file $component_test_file
      sed -i "s!\$component_test_file!../.$f!g" $component_test_file

      # Start esphome compile process
      echo "> [$target_component] [$test_name] [$target_platform]"
      # TODO: Validate escape of Command line substitution value
      esphome -s component_name $target_component -s test_name $test_name -s target_platform $target_platform compile $component_test_file
    done

  else
    # Test has defined a specific target platform.
  
    # Validate we have a base test yaml for selected platform.
    # The target_platform is sourced from the following location.
    # 1. `./tests/build_components_base.[target_platform].yaml`
    # 2. `./tests/build_components_base.[target_platform]-ard.yaml`
    target_platform_file="./tests/build_components_base.$target_platform.yaml"
    if ! [ -f "$target_platform_file" ]; then
      # Try find arduino test framework as platform.
      target_platform_ard="$target_platform-ard"
      target_platform_file="./tests/build_components_base.$target_platform_ard.yaml"
      if ! [ -f "$target_platform_file" ]; then
        echo "No base test file [./tests/build_components_base.$target_platform.yaml, ./tests/build_components_base.$target_platform_ard.yaml] for component test [$f] found."
        exit 1
      fi
      target_platform=$target_platform_ard
    fi

    # create dynamic yaml file in `Testing` folder.
    # `./tests/Testing/[target_component].[test_name].[target_platform].yaml`
    component_test_file="./tests/Testing/$target_component.$test_name.$target_platform.yaml"

    cp $target_platform_file $component_test_file
    sed -i "s!\$component_test_file!../.$f!g" $component_test_file

    # Start esphome compile process
    echo "> [$target_component] [$test_name] [$target_platform]"
    # TODO: Validate escape of Command line substitution value
    esphome -s component_name $target_component -s test_name $test_name -s target_platform $target_platform compile $component_test_file
  fi
done
